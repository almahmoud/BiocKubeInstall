name: Start AKS cluster and build devel then release

## Cluster starts at 12pm on Tuesday, Thursday and Saturday
on: "workflow_dispatch"

env:
  CLUSTER_BASE_NAME: biock8sredis
  AKS_ZONE: 1
  AKS_RESOURCE_GROUP: bioconductor
  DEPLOYMENT_NAME: binaryBuilder
  NFS_PD_SIZE: 100
  NODE_DISK_SIZE: 30
  DEVEL_MAJOR_VER: 3
  DEVEL_MINOR_VER: 16
  RELEA_MAJOR_VER: 3
  RELEA_MINOR_VER: 15
  DEVEL_NAMESPACE: devel
  RELEA_NAMESPACE: release
  NODE_TYPE: Standard_DS3_v2 # 4 CPU, 14 GiB RAM

jobs:
  clusterlaunch:
    name: Start AKS cluster
    runs-on: ubuntu-latest
    outputs:
      prefix: ${{ steps.prefix.outputs.prefix }}
    steps:
    - name: Set prefix with date
      id: prefix
      run: echo "::set-output name=prefix::$(echo $(date +'%m-%d-%H-%M-%S'))"

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create aks cluster
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az aks create \
            --name "$CLUSTER_BASE_NAME-${{ steps.prefix.outputs.prefix }}" \
            --resource-group "$AKS_RESOURCE_GROUP" \
            --zones "$AKS_ZONE" \
            --node-count 6 \
            --node-osdisk-size="$NODE_DISK_SIZE" \
            --node-vm-size="$NODE_TYPE" \
            --generate-ssh-keys

  deploydevelchart:
    name: Deploy devel helm chart and wait
    runs-on: ubuntu-latest
    needs: clusterlaunch
    steps:
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_BASE_NAME }}-${{needs.clusterlaunch.outputs.prefix}}
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}

    # - name: Create devel disk
    #   id: develdisk
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.35.0
    #     inlineScript: |
    #       az disk create \
    #         --resource-group $AKS_RESOURCE_GROUP \
    #         --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel \
    #         --size-gb $NFS_PD_SIZE \
    #         --zone $AKS_ZONE -o json > develdisk.json

    # Setup kubectl
    - uses: azure/setup-kubectl@v2.0
      id: install

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy bioc devel helm chart
      run: |
        cd inst/helm-chart && helm dep update && \
        helm install biock8sredis -n $DEVEL_NAMESPACE --set workers.poolSize=30 \
          --create-namespace \
          --set biocVersion="${DEVEL_MAJOR_VER}.${DEVEL_MINOR_VER}" \
          --set workers.image.tag="RELEASE_${DEVEL_MAJOR_VER}_${DEVEL_MINOR_VER}-azure" \
          --set manager.image.tag="manager-RELEASE_${DEVEL_MAJOR_VER}_${DEVEL_MINOR_VER}-azure" \
          --set nfs.persistence.size="$((${NFS_PD_SIZE}+10))Gi" \
          --set persistence.size="${NFS_PD_SIZE}Gi" \
          .
      # --set persistence.azurePdHandle="$(jq '.id' develdisk.json)" 

    - name: check and wait
      shell: bash
      run: |
        kubectl -n $DEVEL_NAMESPACE get all;
        retries=0
        state=""
        while [ -z "$state" ]; do
          state=$(kubectl -n $DEVEL_NAMESPACE get pod/manager --template="{{range .status.initContainerStatuses}}{{.state.running}}{{end}}")
          [ -z "$state" ] && echo "Waiting $retries/60" && sleep 10;
          retries=$((retries + 1));
        done;
        echo "Init container in running state: $state"

    # Requires kubectl client version > 1.23
    - name: Get logs and events
      run: |
        sh -c "while true; do kubectl -n $DEVEL_NAMESPACE logs pod/manager -c manager > /tmp/logs && echo 'Tail of logs:' && tail /tmp/logs && echo 'GREP of errors:' && grep -i 'error: package' /tmp/logs; sleep 10; done" & kubectl -n $DEVEL_NAMESPACE wait --for=jsonpath='{.status.phase}'=Succeeded --timeout=36000s pod/manager
      continue-on-error: true

    - name: Helm delete the release
      run: helm delete biock8sredis -n $DEVEL_NAMESPACE
      continue-on-error: true

    - name: Delete devel disk
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az disk delete \
            --resource-group $AKS_RESOURCE_GROUP \
            --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel -y

  deployreleasechart:
    name: Deploy release helm chart and wait
    runs-on: ubuntu-latest
    needs: [clusterlaunch,deploydevelchart]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
 
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_BASE_NAME }}-${{needs.clusterlaunch.outputs.prefix}}
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}

    # - name: Create release disk
    #   id: releasedisk
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.35.0
    #     inlineScript: |
    #       az disk create \
    #         --resource-group $AKS_RESOURCE_GROUP \
    #         --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release \
    #         --size-gb $NFS_PD_SIZE \
    #         --zone $AKS_ZONE -o json > releasedisk.json

    # Setup kubectl
    - uses: azure/setup-kubectl@v2.0
      id: install

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy bioc release helm chart
      run: |
        cd inst/helm-chart && helm dep update && \
        helm install biock8sredis -n $RELEA_NAMESPACE --set workers.poolSize=30 \
          --create-namespace \
          --set biocVersion="${RELEA_MAJOR_VER}.${RELEA_MINOR_VER}" \
          --set workers.image.tag="RELEASE_${RELEA_MAJOR_VER}_${RELEA_MINOR_VER}-azure" \
          --set manager.image.tag="manager-RELEASE_${RELEA_MAJOR_VER}_${RELEA_MINOR_VER}-azure" \
          --set nfs.persistence.size="$((${NFS_PD_SIZE}+10))Gi" \
          --set persistence.size="${NFS_PD_SIZE}Gi" \
          .
      # --set persistence.azurePdHandle="$(jq '.id' releasedisk.json)" 

    - name: check and wait
      shell: bash
      run: |
        kubectl -n $RELEA_NAMESPACE get all;
        retries=0
        state=""
        while [ -z "$state" ]; do
          state=$(kubectl -n $RELEA_NAMESPACE get pod/manager --template="{{range .status.initContainerStatuses}}{{.state.running}}{{end}}")
          [ -z "$state" ] && echo "Waiting $retries/60" && sleep 10;
          retries=$((retries + 1));
        done;
        echo "Init container in running state: $state"

    # Requires kubectl client version > 1.23
    - name: Get logs and events
      run: |
        sh -c "while true; do kubectl -n $RELEA_NAMESPACE logs pod/manager -c manager > /tmp/logs && echo 'Tail of logs:' && tail /tmp/logs && echo 'GREP of errors:' && grep -i 'error: package' /tmp/logs; sleep 10; done" & kubectl -n $RELEA_NAMESPACE wait --for=jsonpath='{.status.phase}'=Succeeded --timeout=36000s pod/manager
      continue-on-error: true

    - name: Helm delete the release
      run: helm delete biock8sredis -n $RELEA_NAMESPACE
      continue-on-error: true

    - name: Delete release disk
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az disk delete \
            --resource-group $AKS_RESOURCE_GROUP \
            --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release -y

  cleanup:
    name: Cleanup AKS cluster
    if: always()
    needs: [clusterlaunch,deploydevelchart,deployreleasechart]
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_BASE_NAME }}-${{needs.clusterlaunch.outputs.prefix}}
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}
      continue-on-error: true

    - name: Delete aks cluster
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az aks delete \
            --name "$CLUSTER_BASE_NAME-${{needs.clusterlaunch.outputs.prefix}}" \
            --resource-group "$AKS_RESOURCE_GROUP" -y
      continue-on-error: true

    - name: Delete devel disk
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az disk delete \
            --resource-group $AKS_RESOURCE_GROUP \
            --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel -y
      continue-on-error: true

    - name: Delete release disk
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
          az disk delete \
            --resource-group $AKS_RESOURCE_GROUP \
            --name biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release -y

